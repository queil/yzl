trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

variables:
  pkgver: ${{ variables['Build.SourceBranchName'] }}
  BuildConfiguration: Release

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Publish
  jobs:
  - job: Publish_NuGet
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.0.x'
        includePreviewVersions: true
    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        projects: tests
        arguments: '-c Release /p:AltCover=true /p:AltCoverCobertura=coverage.xml /p:AltCoverAssemblyFilter="FSharp.Core||yzl.tests.unit"'
    - task: PublishCodeCoverageResults@1
      inputs:
        summaryFileLocation: tests/coverage.xml
        codeCoverageTool: cobertura
    - task: DotNetCoreCLI@2
      displayName: 'Pack'
      inputs:
        command: 'pack'
        packagesToPack: 'src/Yzl/*.fsproj'
        versioningScheme: 'byEnvVar'
        versionEnvVar: PKGVER
        verbosityPack: 'Normal'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    - bash: dotnet nuget push -s  https://api.nuget.org/v3/index.json -k $(nuget-api-key) $(Build.ArtifactStagingDirectory)/*.nupkg
      displayName: 'Push'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

  # - job: Publish_docs
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  #   steps:
  #   - task: UsePythonVersion@0
  #     inputs:
  #       versionSpec: '3.7'
  #       addToPath: true
  #       architecture: 'x64'
  #   - script: python -m pip install --upgrade pip setuptools wheel
  #     displayName: 'Install tools'
  #   - script: pip install mkdocs-material
  #     displayName: Install MkDocs Material Theme
  #   - script: |
  #       pip install mkdocs
  #       mkdocs gh-deploy --force
  #     displayName: Publish docs
